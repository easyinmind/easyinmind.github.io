(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{420:function(l,e,i){"use strict";i.r(e);var v=i(21),_=Object(v.a)({},(function(){var l=this,e=l.$createElement,i=l._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[i("h2",{attrs:{id:"webpack-相关"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#webpack-相关"}},[l._v("#")]),l._v(" webpack 相关")]),l._v(" "),i("ol",[i("li",[l._v("安装 webpack webpack-cli，配置npm script相关命令\n"),i("ol",[i("li",[l._v("webpack webpack-cli区别")]),l._v(" "),i("li",[l._v("npx用法")]),l._v(" "),i("li",[l._v("npm script指定配置文件 环境变量 mode 等")])])]),l._v(" "),i("li",[l._v("配置样式相关loader\n"),i("ol",[i("li",[l._v("style-loader获取转换过的js里的css代码，插入到dom里")]),l._v(" "),i("li",[l._v("css-loader处理css文件里的@import和url()，并转为js（包含css代码），但是未使用（需结合style-loader）")]),l._v(" "),i("li",[l._v("postcss-loader结合autoprefixer")]),l._v(" "),i("li",[l._v("less-loader等预编译器loader需安装对应的包（less、scss等），将less转为css")]),l._v(" "),i("li",[l._v("mini-css-extract-plugin的loader获取转换过的js里的css代码，打包成单独的css文件")])])]),l._v(" "),i("li",[l._v("配置静态资源相关loader\n"),i("ol",[i("li",[l._v("file-loader 修正文件路径，拷贝图片。处理文件导入地址并替换成其访问地址，并把文件输出到相应位置（JS的import和CSS的url()）")]),l._v(" "),i("li",[l._v("url-loader类似file-loader，可以把文件转为base64")]),l._v(" "),i("li",[l._v("raw-loader把文本文件的内容加载到代码中去")]),l._v(" "),i("li",[l._v("markdown-laoder md转为html")]),l._v(" "),i("li",[l._v("image-webpack-loader加载并且压缩图片文件")])])]),l._v(" "),i("li",[l._v("配置js、jsx、ts相关loader\n"),i("ol",[i("li",[l._v("babel-loader 转换es语法，结合预设可以处理jsx、ts")]),l._v(" "),i("li",[l._v("ts-loader ts转js，一般不使用，通过babel转")]),l._v(" "),i("li",[l._v("eslint-loader 通过eslint检查js")]),l._v(" "),i("li",[l._v("tslint-loader 通过tslint检查ts")]),l._v(" "),i("li",[l._v("vue-loader处理vue文件")])])]),l._v(" "),i("li",[l._v("配置devserver\n"),i("ol",[i("li",[l._v("watch 模式")]),l._v(" "),i("li",[l._v("webpack-dev-server, devserver 相关配置, HMR")]),l._v(" "),i("li",[l._v("webpack-dev-middleware")])])]),l._v(" "),i("li",[l._v("配置常用插件\n"),i("ol",[i("li",[l._v("webpack.DefinePlugin 定义全局常量")]),l._v(" "),i("li",[l._v("webpack.DllPlugin 配置动态链导出使用")]),l._v(" "),i("li",[l._v("webpack.DllReferencePlugin 配置动态链引入使用")]),l._v(" "),i("li",[l._v("webpack.optimize.SplitChunksPlugin 代码拆分优化插件")]),l._v(" "),i("li",[l._v("webpack.HotModuleReplacementPlugin 热更新插件")]),l._v(" "),i("li",[l._v("webpack.ProgressPlugin 构建进度展示")]),l._v(" "),i("li",[l._v("webpack.ProvidePlugin自动加载模块，而不必到处 import 或 require （可以理解为帮你插入import、require语法了）")]),l._v(" "),i("li",[l._v("webpack.IgnorePlugin 打包时忽略第三方包")]),l._v(" "),i("li",[l._v("mini-css-extract-plugin：CSS 文件提取，并且在生产环境构建是可以用于优化 CSS 文件大小；")]),l._v(" "),i("li",[l._v("optimize-css-assets-webpack-plugin：压缩 CSS 文件；")]),l._v(" "),i("li",[l._v("terser-webpack-plugin：JavaScript 代码压缩插件，这个插件兼容 ES6 语法，推荐使用这个插件，而不是用 uglifyjs；")]),l._v(" "),i("li",[l._v("clean-webpack-plugin：在编译之前清理指定目录指定内容；")]),l._v(" "),i("li",[l._v("html-webpack-plugin：html 插件，可以根据 JavaScript 模板文件生成 HTML；")]),l._v(" "),i("li",[l._v("preload-webpack-plugin：html-webpack-plugin 的插件，给页面添加``资源；")]),l._v(" "),i("li",[l._v("webpack-bundle-analyzer：webpack bundle 分析插件；")]),l._v(" "),i("li",[l._v("copy-webpack-plugin：文件拷贝插件，可以指定文件夹的文件复制到 output 文件夹，方便打包上线；")]),l._v(" "),i("li",[l._v("hard-source-webpack-plugin：通过缓存提升非首次编译速度；")]),l._v(" "),i("li",[l._v("stylelint-webpack-plugin：StyleLint 的插件。")])])]),l._v(" "),i("li",[l._v("拆分配置，区分开发和生产环境，优化构建速度及体积（优化单独总结）")])]),l._v(" "),i("h2",{attrs:{id:"git、代码、格式规范"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git、代码、格式规范"}},[l._v("#")]),l._v(" git、代码、格式规范")]),l._v(" "),i("ol",[i("li",[l._v("commitizen + cz-conventional-changelog（或其它是配置）替换git commit")]),l._v(" "),i("li",[l._v("@commitlint/cli + @commitlint/config-conventional 校验提交信息")]),l._v(" "),i("li",[l._v("eslint + prettier 校验代码及格式化代码（注意解决两者之间的校验冲突等问题）")]),l._v(" "),i("li",[l._v("lint-staged 处理本次git add的文件（减少处理的范围）")]),l._v(" "),i("li",[l._v("husky + git hooks 提交前 校验及格式化代码、校验提交信息")])])])}),[],!1,null,null,null);e.default=_.exports}}]);