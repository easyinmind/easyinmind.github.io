(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{422:function(v,_,s){"use strict";s.r(_);var a=s(21),t=Object(a.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h2",{attrs:{id:"如何理解前端工程化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解前端工程化"}},[v._v("#")]),v._v(" 如何理解前端工程化")]),v._v(" "),s("p",[v._v("从工程的角度解决复杂前端项目的管理问题")]),v._v(" "),s("ul",[s("li",[v._v("如何管理项目 -> 模块化")]),v._v(" "),s("li",[v._v("如何控制质量 -> 规范化")]),v._v(" "),s("li",[v._v("如何提升效率 -> 自动化")])]),v._v(" "),s("h2",{attrs:{id:"模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[v._v("#")]),v._v(" 模块化")]),v._v(" "),s("p",[v._v("通过模块化的思想对代码和资源进行划分，方便管理和资源共用。最早的时候通过文件目录规范、命名空间的形式实现模块化。这不是一个规范，实现起来还是有很多差异的。后来出现了模块化规范来进行统一。")]),v._v(" "),s("h2",{attrs:{id:"js模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js模块化"}},[v._v("#")]),v._v(" js模块化")]),v._v(" "),s("ul",[s("li",[v._v("CommonJS 规范是Node.js所遵循的规范，是同步加载模块的。\n"),s("ul",[s("li",[v._v("require：引入一个模块")]),v._v(" "),s("li",[v._v("exports：导出模块内容")]),v._v(" "),s("li",[v._v("module：模块本身")])])]),v._v(" "),s("li",[v._v("AMD 是Requirejs库提出并完善的异步加载模块的规范。\n"),s("ul",[s("li",[v._v("require() ：加载模块，不需要返回模块")]),v._v(" "),s("li",[v._v("define()：定义模块，需要返回模块")]),v._v(" "),s("li",[v._v("这两个函数都接受两个参数，第一个是数组用来什么模块的依赖项，第二个是函数，形参对应数组的项。")])])]),v._v(" "),s("li",[v._v("ES6 Module 是ES6提出的模块化规范。\n"),s("ul",[s("li",[v._v("import：引入模块")]),v._v(" "),s("li",[v._v("export：导出模块")])])]),v._v(" "),s("li",[v._v("CMD 是Sea.js实现的一个标准，这个标准类似于 CommonJS，在使用上基本和 Require.js 相同，后来被Require.js兼容")]),v._v(" "),s("li",[v._v("UMD 兼容CommonJS 和 AMD 一套规范")])]),v._v(" "),s("h2",{attrs:{id:"css模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css模块化"}},[v._v("#")]),v._v(" CSS模块化")]),v._v(" "),s("p",[v._v("在 CSS 样式中也可以采用@import的方式来引入自己依赖的模块")]),v._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[v._v("@import")]),v._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[v._v("'reset.css'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")])]),v._v("\n")])]),v._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[v._v("1")]),s("br")])]),s("p",[v._v("Less 或者 Sass 这些 CSS 预处理语言中@import还可以用来导入一些变量、函数和mixin的定义")]),v._v(" "),s("h2",{attrs:{id:"模块化和组件化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化和组件化"}},[v._v("#")]),v._v(" 模块化和组件化")]),v._v(" "),s("ul",[s("li",[v._v("模块化是对文件、对代码和资源拆分，解决的是功能耦合问题")]),v._v(" "),s("li",[v._v("组件化可以理解为对 UI 层面的拆分，解决的是业务组件的复用问题")]),v._v(" "),s("li",[v._v("前端提到组件化更多的是具有模板、样式和 js 交互的 UI 组件")])]),v._v(" "),s("h2",{attrs:{id:"规范化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规范化"}},[v._v("#")]),v._v(" 规范化")]),v._v(" "),s("p",[v._v("项目复杂之后同样需要规范来约束，提高项目质量和可维护性")]),v._v(" "),s("ul",[s("li",[v._v("目录划分规范")]),v._v(" "),s("li",[v._v("文件命名规范")]),v._v(" "),s("li",[v._v("编码层面规范（ESlint、Stylelint）")]),v._v(" "),s("li",[v._v("git flow 工作流，（分支命名规范、代码合并规范、message规范等）")]),v._v(" "),s("li",[v._v("code review")])]),v._v(" "),s("h2",{attrs:{id:"自动化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动化"}},[v._v("#")]),v._v(" 自动化")]),v._v(" "),s("p",[v._v("自动化的目的只要是提升效率，可实现自动化的方面主要有：")]),v._v(" "),s("ul",[s("li",[v._v("代码构建（压缩、合并、提取等）")]),v._v(" "),s("li",[v._v("CI/CD")]),v._v(" "),s("li",[v._v("自动化测试")])]),v._v(" "),s("h2",{attrs:{id:"如何理解-webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-webpack"}},[v._v("#")]),v._v(" 如何理解 webpack")]),v._v(" "),s("p",[v._v("webpack是一个模块化打包工具，解决复杂前端项目的一些，主要实现了")]),v._v(" "),s("ul",[s("li",[v._v("提升本地开发效率\n"),s("ul",[s("li",[v._v("自动刷新、热更新（HMR）、接口代理")])])]),v._v(" "),s("li",[v._v("可以通过loader解决兼容及框架相关等问题\n"),s("ul",[s("li",[v._v("postcss 解决样式兼容")]),v._v(" "),s("li",[v._v("babel 解决JS兼容及支持react和ts")]),v._v(" "),s("li",[v._v("支持css预编译器")]),v._v(" "),s("li",[v._v("通过其他loader或自定义loader更多问题")])])]),v._v(" "),s("li",[v._v("解决生产环境下的一些问题\n"),s("ul",[s("li",[v._v("代码压缩")]),v._v(" "),s("li",[v._v("代码分割")]),v._v(" "),s("li",[v._v("……")])])]),v._v(" "),s("li",[v._v("模块化开发\n"),s("ul",[s("li",[v._v("默认支持js模块（ESM、CommonJs、AMD、CMD）")]),v._v(" "),s("li",[v._v("webpack把一切视为模块，统一模块化开发方案（样式、图片、字体等所有资源文件都作为模块）")])])]),v._v(" "),s("li",[v._v("提供插件系统，可以扩展更多自定义功能")]),v._v(" "),s("li",[v._v("待补充")])]),v._v(" "),s("p",[v._v("webpack 把一切都看作模块，通过 loader 和 plugin 对不同的文件类型进行转换、压缩、合并、分割、优化等操作输出适于生产环境运行的代码")]),v._v(" "),s("p",[v._v("Webpack和另外两个并没有太多的可比性，Gulp/Grunt是一种能够优化前端的开发流程的工具，而WebPack是一种模块化的解决方案，不过Webpack的优点使得Webpack在很多场景下可以替代Gulp/Grunt类的工具")]),v._v(" "),s("h2",{attrs:{id:"结语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[v._v("#")]),v._v(" 结语")]),v._v(" "),s("p",[v._v("这里主要是对前端工程的概述")])])}),[],!1,null,null,null);_.default=t.exports}}]);